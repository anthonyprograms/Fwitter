angular.module("app",["ngRoute"]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,o){t.login=function(t,n){o.login(t,n).then(function(t){console.log(t)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(t,o){t.addPost=function(){t.postBody&&o.create({username:"anthonyprograms",body:t.postBody}).success(function(o){t.posts.unshift(o),t.postBody=null})},o.fetch().success(function(o){t.posts=o})}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(o){return t.post("/api/posts",o)}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var o=this;o.getUser=function(){return t.get("/api/users",{headers:{"X-Auth":this.token}})},o.login=function(n,e){return t.post("/api/sessions",{username:n,password:e}).then(function(t){return o.token=t.data,o.getUser()})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImxvZ2luLmN0cmwuanMiLCJwb3N0cy5jdHJsLmpzIiwicG9zdHMuc3ZjLmpzIiwicm91dGVzLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJVc2VyU3ZjIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsInVzZXIiLCJjb25zb2xlIiwibG9nIiwiUG9zdHNTdmMiLCJhZGRQb3N0IiwicG9zdEJvZHkiLCJjcmVhdGUiLCJib2R5Iiwic3VjY2VzcyIsInBvc3QiLCJwb3N0cyIsInVuc2hpZnQiLCJmZXRjaCIsInNlcnZpY2UiLCIkaHR0cCIsInRoaXMiLCJnZXQiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJ0ZW1wbGF0ZVVybCIsInN2YyIsImdldFVzZXIiLCJoZWFkZXJzIiwiWC1BdXRoIiwidG9rZW4iLCJ2YWwiLCJkYXRhIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBQUMsT0FBQSxPQUNBLFlDREFELFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxhQUFBLFNBQUEsVUFBQSxTQUFBQyxFQUFBQyxHQUNBRCxFQUFBRSxNQUFBLFNBQUFDLEVBQUFDLEdBQ0FILEVBQUFDLE1BQUFDLEVBQUFDLEdBQ0FDLEtBQUEsU0FBQUMsR0FDQUMsUUFBQUMsSUFBQUYsU0NMQVQsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLGFBQUEsU0FBQSxXQUFBLFNBQUFDLEVBQUFTLEdBQ0FULEVBQUFVLFFBQUEsV0FDQVYsRUFBQVcsVUFDQUYsRUFBQUcsUUFDQVQsU0FBQSxrQkFDQVUsS0FBQWIsRUFBQVcsV0FDQUcsUUFBQSxTQUFBQyxHQUNBZixFQUFBZ0IsTUFBQUMsUUFBQUYsR0FDQWYsRUFBQVcsU0FBQSxRQUtBRixFQUFBUyxRQUFBSixRQUFBLFNBQUFFLEdBQ0FoQixFQUFBZ0IsTUFBQUEsT0NmQW5CLFFBQUFDLE9BQUEsT0FDQXFCLFFBQUEsWUFBQSxRQUFBLFNBQUFDLEdBQ0FDLEtBQUFILE1BQUEsV0FDQSxNQUFBRSxHQUFBRSxJQUFBLGVBRUFELEtBQUFULE9BQUEsU0FBQUcsR0FDQSxNQUFBSyxHQUFBTCxLQUFBLGFBQUFBLE9DTkFsQixRQUFBQyxPQUFBLE9BQ0F5QixRQUFBLGlCQUFBLFNBQUFDLEdBQ0FBLEVBQ0FDLEtBQUEsS0FBQTFCLFdBQUEsWUFBQTJCLFlBQUEsZUFDQUQsS0FBQSxhQUFBMUIsV0FBQSxlQUFBMkIsWUFBQSxrQkFDQUQsS0FBQSxVQUFBMUIsV0FBQSxZQUFBMkIsWUFBQSxrQkNMQTdCLFFBQUFDLE9BQUEsT0FDQXFCLFFBQUEsV0FBQSxRQUFBLFNBQUFDLEdBQ0EsR0FBQU8sR0FBQU4sSUFDQU0sR0FBQUMsUUFBQSxXQUNBLE1BQUFSLEdBQUFFLElBQUEsY0FDQU8sU0FBQUMsU0FBQVQsS0FBQVUsVUFHQUosRUFBQXpCLE1BQUEsU0FBQUMsRUFBQUMsR0FDQSxNQUFBZ0IsR0FBQUwsS0FBQSxpQkFDQVosU0FBQUEsRUFBQUMsU0FBQUEsSUFDQUMsS0FBQSxTQUFBMkIsR0FFQSxNQURBTCxHQUFBSSxNQUFBQyxFQUFBQyxLQUNBTixFQUFBQyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xuICAgICduZ1JvdXRlJ1xuXSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ0xvZ2luQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcbiAgICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgICAgIFVzZXJTdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAodXNlcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2codXNlcilcbiAgICAgICAgfSlcbiAgICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignUG9zdHNDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgUG9zdHNTdmMpIHtcbiAgICAkc2NvcGUuYWRkUG9zdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCRzY29wZS5wb3N0Qm9keSkge1xuICAgICAgICAgICAgUG9zdHNTdmMuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogJ2FudGhvbnlwcm9ncmFtcycsXG4gICAgICAgICAgICAgICAgYm9keTogJHNjb3BlLnBvc3RCb2R5XG4gICAgICAgICAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0KSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdClcbiAgICAgICAgICAgICAgICAkc2NvcGUucG9zdEJvZHkgPSBudWxsXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgUG9zdHNTdmMuZmV0Y2goKS5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0cykge1xuICAgICAgICAkc2NvcGUucG9zdHMgPSBwb3N0c1xuICAgIH0pXG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnUG9zdHNTdmMnLCBmdW5jdGlvbiAoJGh0dHApIHtcbiAgICB0aGlzLmZldGNoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Bvc3RzJylcbiAgICB9XG4gICAgdGhpcy5jcmVhdGUgPSBmdW5jdGlvbiAocG9zdCkge1xuICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9wb3N0cycsIHBvc3QpXG4gICAgfVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbmZpZyhmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIpIHtcbiAgICAkcm91dGVQcm92aWRlclxuICAgIC53aGVuKCcvJywgeyBjb250cm9sbGVyOiAnUG9zdHNDdHJsJywgdGVtcGxhdGVVcmw6ICdwb3N0cy5odG1sJyB9KVxuICAgIC53aGVuKCcvcmVnaXN0ZXInLCB7Y29udHJvbGxlcjogJ1JlZ2lzdGVyQ3RybCcsIHRlbXBsYXRlVXJsOiAncmVnaXN0ZXIuaHRtbCcgfSlcbiAgICAud2hlbignL2xvZ2luJywge2NvbnRyb2xsZXI6ICdMb2dpbkN0cmwnLCB0ZW1wbGF0ZVVybDogJ2xvZ2luLmh0bWwnIH0pXG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnVXNlclN2YycsIGZ1bmN0aW9uICgkaHR0cCkge1xuICAgIHZhciBzdmMgPSB0aGlzXG4gICAgc3ZjLmdldFVzZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdXNlcnMnLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7ICdYLUF1dGgnOiB0aGlzLnRva2VuIH1cbiAgICAgICAgfSlcbiAgICB9XG4gICAgc3ZjLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcbiAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICAgICAgc3ZjLnRva2VuID0gdmFsLmRhdGFcbiAgICAgICAgICAgIHJldHVybiBzdmMuZ2V0VXNlcigpXG4gICAgICAgIH0pXG4gICAgfVxufSlcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==